@using X.PagedList
@using X.PagedList.Mvc.Bootstrap4.Core
@using X.PagedList.Mvc.Core

@model IPagedList<MyFile>

@{
    ViewData["Title"] = "My Files";
}


<h1>My Files</h1>

@if(@Model.Count() > 0)
{
    @foreach (MyFile myFile in @Model)
    {

    <div class="my-file-container">
        <table class ="vertical-table">
            <tr>
                <th>File Name: </th>
                <td>@myFile.FileName</td>
            </tr>
            <tr>
                <th>File Size: </th>
                <td>@myFile.FileSize Mb</td>
            </tr>
            <tr>
                <th>Upload Date: </th>
                <td>@myFile.UploadDate</td>
            </tr>
        </table>

        <div class="button-conteiner">
        <a class="general-button" id ="manage-button"  asp-controller="DocumentAccess" asp-action="Index" asp-route-fileId=@myFile.DocumentId>Manage</a>
        <a class="general-button" id ="manage-button"  asp-controller="DocumentAccess" asp-action="Index" asp-route-fileId=@myFile.DocumentId>Download</a>
        <a class="general-button" id ="manage-button"  asp-controller="DocumentAccess" asp-action="Index" asp-route-fileId=@myFile.DocumentId>Delete</a>

    
    </div>
    </div>

    }

 
   @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), Bootstrap4PagedListRenderOptions.OnlyShowFivePagesAtATime)

}
